@model IEnumerable<PlayerInformationSystem.Models.Player>

@{
    ViewBag.Title = "Index";
}

<h2>List Player</h2>

@using (Html.BeginForm("Index", "Players", FormMethod.Post))
{
    <p>
        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-1">
                    Sort by :
                </div>

                <div class="col-md-2">
                    @Html.DropDownList("sortOrder", new SelectList(new Dictionary<string, string> {
                        { "Player Number", "PlayerNumber" },
                        { "Player Name", "PlayerName" },
                        { "Age", "Age" },
                        { "Hire Date", "HireDate" },
                        { "Expired Date", "ExpiredDate" },
                        { "Club Name", "ClubName" },
                        { "Position Name", "PositionName" },
                    }, "Value", "Key"), "Select column", htmlAttributes: new { @class = "form-control", style = "width: 150px;" })
                </div>

                <div class="col-md-2">
                    @Html.DropDownList("orderBy", new SelectList(new Dictionary<string, string> {
                        { "Ascending", "Ascending" },
                        { "Descending", "Descending" },
                    }, "Value", "Key"), "Select type", htmlAttributes: new { @class = "form-control", style = "width: 150px;" })
                </div>

                <div class="col-md-1">
                    <input type="submit" value="Sort" class="btn btn-sm btn-primary form-control" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2">
                    @if (User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Create New Player", "Create", null, new { @class = "btn btn-sm btn-success", type = "button" })
                    }
                </div>                
            </div>            
        </div>        
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PlayerNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HireDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ExpiredDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Club.ClubName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Position.Name)
            </th>                
            <th></th>
        </tr>

        <tr>
            <td>
                @Html.TextBox("playerNumber", "", new { @class = "form-control", style = "width: 130px;" })
            </td>
            <td>
                @Html.TextBox("playerName", "", new { @class = "form-control", style = "width: 130px;" })
            </td>
            <td>
                @Html.TextBox("age", "", new { @class = "form-control", style = "width: 40px;" })
            </td>
            <td>
                <input type="text" onfocus="(this.type='date')" name="hireDate" size="5" class="form-control">
            </td>
            <td>
                <input type="text" onfocus="(this.type='date')" name="expiredDate" size="5" class="form-control">
            </td>
            <td>
                @Html.TextBox("clubName", "", new { @class = "form-control", style = "width: 130px;" })
            </td>
            <td>
                @Html.TextBox("position", "", new { @class = "form-control", style = "width: 130px;" })
            </td>
            <td>
                <input type="submit" value="Search" class="btn btn-sm btn-primary" />
            </td>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Convert.ToDateTime(item.HireDate).ToString("dd/MM/yyyy")
                </td>
                @if (item.ExpiredDate > DateTime.Today.AddMonths(1))
                {
                    <td>
                        @Convert.ToDateTime(item.ExpiredDate).ToString("dd/MM/yyyy")
                    </td>
                }
                else if (item.ExpiredDate < DateTime.Today)
                { 
                    <td style="background:red">
                        @Convert.ToDateTime(item.ExpiredDate).ToString("dd/MM/yyyy")
                    </td>
                }
                else
                {
                    <td style="background:yellow">
                        @Convert.ToDateTime(item.ExpiredDate).ToString("dd/MM/yyyy")
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Club.ClubName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position.Name)
                </td>
                <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <div class="form-group">
                            @Html.ActionLink("Edit", "Edit", new { id = item.PlayerId }, new { @class = "btn btn-sm btn-default" })
                            @Html.ActionLink("Details", "Details", new { id = item.PlayerId }, new { @class = "btn btn-sm btn-info" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.PlayerId }, new { @class = "btn btn-sm btn-danger" })
                        </div>
                    }
                    @if (User.IsInRole("Player"))
                    {
                        <div class="form-group">
                            @Html.ActionLink("Details", "Details", new { id = item.PlayerId }, new { @class = "btn btn-sm btn-info" })
                        </div>
                    }
                    @if (User.IsInRole("Committee"))
                    {
                        <div class="form-group">
                            @Html.ActionLink("Approve", "Approve", new { id = item.PlayerId }, new { @class = "btn btn-sm btn-success" })
                            @Html.ActionLink("Reject", "Reject", new { id = item.PlayerId }, new { @class = "btn btn-sm btn-danger" })
                        </div>
                    }
                </td>
            </tr>
        }

    </table>
}